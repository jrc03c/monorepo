var Rr=Object.create;var _t=Object.defineProperty;var Yr=Object.getOwnPropertyDescriptor;var $r=Object.getOwnPropertyNames;var Lr=Object.getPrototypeOf,Kr=Object.prototype.hasOwnProperty;var qr=(t,e,r)=>e in t?_t(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r;var $e=t=>_t(t,"__esModule",{value:!0});var Vr=(t,e)=>{for(var r in e)_t(t,r,{get:e[r],enumerable:!0})},Le=(t,e,r,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of $r(e))!Kr.call(t,o)&&(r||o!=="default")&&_t(t,o,{get:()=>e[o],enumerable:!(n=Yr(e,o))||n.enumerable});return t},Ke=(t,e)=>Le($e(_t(t!=null?Rr(Lr(t)):{},"default",!e&&t&&t.__esModule?{get:()=>t.default,enumerable:!0}:{value:t,enumerable:!0})),t),Gr=(t=>(e,r)=>t&&t.get(e)||(r=Le($e({}),e,1),t&&t.set(e,r),r))(typeof WeakMap!="undefined"?new WeakMap:0);var Qt=(t,e,r)=>(qr(t,typeof e!="symbol"?e+"":e,r),r);var En={};Vr(En,{DataFrame:()=>_,IndexMatcher:()=>mt,MathError:()=>R,Series:()=>F,abs:()=>ft,add:()=>at,apply:()=>nt,arccos:()=>ie,arcsin:()=>se,arctan:()=>ae,argmax:()=>xt,argmin:()=>Et,assert:()=>a,cast:()=>J,ceil:()=>me,chop:()=>ue,clamp:()=>le,combinations:()=>Ft,combinationsIterator:()=>bt,copy:()=>I,correl:()=>jt,cos:()=>pe,count:()=>ot,covariance:()=>ut,dataTypes:()=>ce,decycle:()=>Q,diff:()=>Bt,distance:()=>zt,divide:()=>he,dot:()=>V,dropMissing:()=>vt,dropMissingPairwise:()=>wt,dropNaN:()=>gt,dropNaNPairwise:()=>St,dropUndefined:()=>de,every:()=>ct,exp:()=>ge,factorial:()=>be,find:()=>Ct,findAll:()=>Jt,flatten:()=>A,float:()=>Ne,floor:()=>ve,identity:()=>we,indexOf:()=>G,inferType:()=>Ot,int:()=>k,intersect:()=>Mt,inverse:()=>Tt,isArray:()=>f,isBoolean:()=>X,isBrowser:()=>Se,isDataFrame:()=>g,isDate:()=>$,isEqual:()=>j,isFunction:()=>S,isJagged:()=>W,isNested:()=>it,isNumber:()=>l,isObject:()=>P,isSeries:()=>d,isString:()=>w,isUndefined:()=>h,lerp:()=>Oe,log:()=>Te,max:()=>rt,mean:()=>_e,median:()=>De,min:()=>At,mod:()=>Ie,mode:()=>xe,multiply:()=>Pt,ndarray:()=>B,normal:()=>Ae,ones:()=>Ee,permutations:()=>Fe,permutationsIterator:()=>Rt,pow:()=>lt,print:()=>Me,product:()=>Z,random:()=>K,range:()=>O,remap:()=>je,reshape:()=>et,reverse:()=>Y,round:()=>Be,scale:()=>q,seed:()=>qt,set:()=>E,shape:()=>b,shuffle:()=>st,sign:()=>Ue,sin:()=>Pe,some:()=>Yt,sort:()=>L,sqrt:()=>Ut,stats:()=>D,std:()=>$t,stdev:()=>ke,subtract:()=>kt,sum:()=>pt,tan:()=>ze,time:()=>Ht,timeAsync:()=>Ce,timeSync:()=>Ht,transpose:()=>C,union:()=>Je,variance:()=>Re,vectorize:()=>v,zeros:()=>ht,zip:()=>Ye});function l(t){return typeof t=="number"&&!isNaN(t)||typeof t=="bigint"}var Wr=new Function(`
  try {
    return this === window
  } catch(e) {}

  try {
    return typeof importScripts !== "undefined"
  } catch(e) {}

  return false
`),R=class extends Error{constructor(e){Wr()?super(e):super(`

\x1B[31m`+e+`
\x1B[0m`)}};function a(t,e){if(!t)throw new R(e)}var Zt=[Array,ArrayBuffer,BigInt64Array,BigUint64Array,Float32Array,Float64Array,Int16Array,Int32Array,Int8Array,Uint16Array,Uint32Array,Uint8Array,Uint8ClampedArray];function h(t){return t===null||typeof t>"u"}var Hr=Zt.map(t=>t.name);function f(t){try{return t instanceof Array?!0:h(t.constructor)?!1:Zt.indexOf(t.constructor)>-1||Hr.indexOf(t.constructor.name)>-1}catch{return!1}}function g(t){try{return!!t._symbol&&t._symbol===Symbol.for("@jrc03c/js-math-tools/dataframe")}catch{return!1}}function S(t){return typeof t=="function"}function P(t){return typeof t=="object"&&!h(t)&&!f(t)}function d(t){try{return!!t._symbol&&t._symbol===Symbol.for("@jrc03c/js-math-tools/series")}catch{return!1}}function G(t,e){if(g(t)){let i=G(t.values,e);return i.length>0&&l(i[0])&&i[0]>=0&&i[0]<t.index.length&&(i[0]=t.index[i[0]]),i.length>1&&l(i[1])&&i[1]>=0&&i[1]<t.columns.length&&(i[1]=t.columns[i[1]]),i}if(d(t)){let i=G(t.values,e);return i.length>0&&l(i[0])&&i[0]>=0&&i[0]<t.index.length&&(i[0]=t.index[i[0]]),i}if(a(P(t)||f(t),"You must pass (1) an object, array, Series, or DataFrame and (2) a function or value into the `indexOf` function!"),!S(e)){let i=e;e=s=>s===i}function r(i,s,m){if(m=m||[],m.indexOf(i)>-1)return null;if(P(i)){m.push(i);let u=Object.keys(i).concat(Object.getOwnPropertySymbols(i));for(let p=0;p<u.length;p++){let c=u[p],y=i[c];if(s(y))return[c];let N=r(y,s,m);if(N&&N.length>0)return[c].concat(N)}}else if(f(i)){m.push(i);for(let u=0;u<i.length;u++){let p=i[u];if(s(p))return[u];let c=r(p,s,m);if(c&&c.length>0)return[u].concat(c)}}else if(s(i))return[];return null}function n(i){try{return e(i)}catch{return!1}}let o=r(t,n);return o&&o.length>0?o:null}function I(t){function e(r){if(typeof r=="object"){if(r===null)return null;if(f(r))return r instanceof Array?r.map(o=>I(o)):r.slice();if(d(r)){let o=r.copy();return o.values=I(o.values),o}if(g(r)){let o=r.copy();return o.values=I(r.values),o}if(r instanceof Date)return new Date(r.getTime());r=Q(r);let n={};return Object.keys(r).concat(Object.getOwnPropertySymbols(r)).forEach(o=>{n[o]=I(r[o])}),n}else return r}return e(Q(t))}function Q(t){function e(o,i,s){if(i=i||[],s=s||"",i.indexOf(o)>-1){let m=s.split("/").slice(s.startsWith("/")?1:0);if(m.some((p,c)=>{let y=m.slice(0,m.length-c-1),N=r;return y.forEach(T=>{N=N[T]}),N===o}))return`<reference to "${r===o?"/":"/"+G(r,o).join("/")}">`}return typeof o=="object"?o===null?null:(i.push(o),f(o)?typeof o.constructor<"u"&&o.constructor.name!=="Array"?o.slice():o.map((m,u)=>e(m,i,s+"/"+u)):(Object.keys(o).concat(Object.getOwnPropertySymbols(o)).forEach(m=>{o[m]=e(o[m],i,s+"/"+m.toString())}),o)):o}let r=t,n=e(r);if(g(t)){let o=t.copy();o._values=n.values,o._columns=n.columns,o._index=n.index,n=o}if(d(t)){let o=t.copy();o.name=n.name,o._values=n.values,o._index=n.index,n=o}return n}function $(t){return t instanceof Date&&t.toString()!=="Invalid Date"}var qe=["number","int","float","bigint"];function j(t,e){function r(n,o){let i=typeof n,s=typeof o;if(i!==s&&!qe.includes(i)&&!qe.includes(s))return!1;if(i==="undefined"&&s==="undefined")return!0;if(i==="boolean"||i==="symbol")return n===o;if(i==="number"||i==="bigint")try{let m=n.toString(),u=o.toString();return m===u}catch{return!1}if(i==="string"||i==="function")return n===o;if(i==="object"){if(n===null||o===null)return n===null&&o===null;{if($(n))return $(o)?n.getTime()===o.getTime():!1;if($(o))return!1;if(n instanceof RegExp&&o instanceof RegExp)return n.toString()===o.toString();if(f(n)!==f(o))return!1;let m=Object.keys(n).concat(Object.getOwnPropertySymbols(n)),u=Object.keys(o).concat(Object.getOwnPropertySymbols(o));if(m.length!==u.length)return!1;for(let p=0;p<m.length;p++){let c=m[p];if(!r(n[c],o[c]))return!1}return!0}}}try{return r(t,e)}catch{return r(Q(t),Q(e))}}function Dt(t){let e="abcdefg1234567890",r="";for(;r.length<t;)r+=e[Math.floor(Math.random()*e.length)];return r}var Xr=Dt(16),Qr=Dt(16),Zr=Dt(16),tn=Dt(16),en=Dt(16),te=class{constructor(){this.clear()}get counts(){return this.values.map(e=>this.get(e))}get values(){return Object.values(this.valuesDict)}clear(){return this.countsDict={},this.valuesDict={},this}count(e){for(let r of e)f(r)?this.count(r):this.increment(r);return this}delete(e){let r=this.getStandardizedKey(e);return delete this.countsDict[r],delete this.valuesDict[r],this}get(e){return this.countsDict[this.getStandardizedKey(e)]||0}getStandardizedKey(e){return typeof e=="object"&&e===null?Xr:h(e)?Qr:S(e)?e.toString():typeof e=="symbol"?e.toString()+" - "+en:e===1/0?Zr:e===-1/0?tn:typeof e=="bigint"?e.toString():g(e)?e.toJSONString():d(e)?JSON.stringify(e.toObject()):JSON.stringify(e)}has(e){return!h(this.countsDict[this.getStandardizedKey(e)])}increment(e){return this.set(e,this.get(e)+1)}set(e,r){let n=this.getStandardizedKey(e);return this.countsDict[n]=r,this.valuesDict[n]=e,this}toArray(){return this.values.map(e=>({value:e,count:this.get(e)}))}toObject(){let e={};return this.values.forEach(r=>{e[r]=this.get(r)}),e}};function A(t){if(g(t)||d(t))return A(t.values);a(f(t),"The `flatten` function only works on arrays, Series, and DataFrames!");function e(r){let n=[];return r.forEach(o=>{f(o)?n=n.concat(e(o)):n.push(o)}),n}return e(t)}function D(t,e){e=e||{};let r=new te,n={},o=A(t),i=[],s=-1/0,m=1/0,u=!1,p=0;for(let y of o){if(typeof y=="bigint"&&(u=!0),!e.shouldDropNaNs||l(y))try{y>s&&(s=y),y<m&&(m=y),p+=Number(y),i.push(y)}catch{s=NaN,m=NaN,p=NaN}r.increment(y)}let c=p/i.length;if(n.counts=r,n.max=s,n.mean=c,n.min=m,n.n=o.length,n.sum=p,isNaN(n.mean)&&(n.max=NaN,n.min=NaN),e.shouldDropNaNs&&(n.nWithoutNaNs=i.length),e.mode){let y=Array.from(r.values.map(M=>[M,r.get(M)])).toSorted((M,U)=>U[1]-M[1]),N=y[0][1],T=[];for(let M of y)if(M[1]==N)T.push(M[0]);else break;n.mode=T.toSorted()}if(e.median)if(isNaN(c))n.median=NaN;else{let y=i.toSorted((T,M)=>Number(T)-Number(M)),N=Math.floor(y.length/2);if(y.length%2===0){let T=y[N-1],M=y[N];if(n.median=(Number(T)+Number(M))/2,u&&typeof T=="bigint"&&typeof M=="bigint")try{n.median=BigInt(n.median)}catch{}}else n.median=y[N]}if(e.stdev||e.variance){let y=0;for(let T of i)y+=Math.pow(Number(T)-c,2);y/=i.length;let N=Math.sqrt(y);n.stdev=N,n.variance=y}if(u){try{n.sum=BigInt(n.sum)}catch{}try{n.mean=BigInt(n.mean)}catch{}e.mode&&(n.mode=n.mode.map(y=>{try{return BigInt(y)}catch{return y}}))}return n}function ot(t,e){let{counts:r}=D(t);return h(e)||(S(e)?r.values.forEach(n=>{e(n)||r.delete(n)}):r.values.forEach(n=>{j(n,e)||r.delete(n)})),r}function ee(t){if(g(t)||d(t))return ee(t.values);if(f(t)){let e=!1,r=!1,n=null;for(let o of t){if(ee(o))return!0;if(f(o)){if(n===null)n=o.length;else if(o.length!==n)return!0;e=!0}else r=!0;if(e&&r)return!0}}return!1}function W(t){return ee(Q(t))}function it(t){if(g(t)||d(t))return it(t.values);a(f(t),"The `isNested` function only works on arrays, Series, and DataFrames!");for(let e=0;e<t.length;e++)if(f(t[e]))return!0;return!1}var dt="You must pass a natural number or a one-dimensional array of natural numbers into the `ndarray` function!";function B(t){a(!h(t),dt),f(t)||(t=[t]),a(!it(t),dt),a(t.length>0,dt);let e=t[0];if(typeof e=="bigint"&&(e=Number(e)),a(l(e),dt),a(e>=0,dt),a(Math.floor(e)===e,dt),a(e!==1/0,"We can't create an array containing an infinite number of values!"),t.length===1){let r=[];for(let n=0;n<e;n++)r.push(void 0);return r}else{let r=[];for(let n=0;n<e;n++)r.push(B(t.slice(1)));return r}}function Y(t){if(g(t)||d(t)){let r=t.copy();return r.values=Y(r.values),r.index=Y(r.index),r}a(f(t),"The `reverse` function only works on arrays, Series, and DataFrames!");let e=[];for(let r=t.length-1;r>=0;r--)e.push(t[r]);return e}function O(t,e,r=1){a(!h(t)&&!h(e)&&!h(r),"You must pass two numbers and optionally a step value to the `range` function!"),a(l(t)&&l(e)&&l(r),"You must pass two numbers and optionally a step value to the `range` function!"),a(r>0,"The step value must be greater than 0! (NOTE: The step value is a magnitude; it does not indicate direction.)");let n=!1,o=typeof t=="bigint"||typeof e=="bigint"||typeof r=="bigint";if(t=Number(t),e=Number(e),r=Number(r),t>e){n=!0;let s=t;t=e+r,e=s+r}let i=[];for(let s=t;s<e;s+=r)if(o)try{i.push(BigInt(s))}catch{i.push(s)}else i.push(s);return n&&(i=Y(i)),i}function It(t){let e="abcdefg1234567890",r="";for(;r.length<t;)r+=e[Math.floor(Math.random()*e.length)];return r}var rn=It(256),nn=It(256),on=It(256),sn=It(256),an=It(256);function E(t){if(g(t)||d(t))return E(t.values);a(f(t),"The `set` function only works on arrays, Series, and DataFrames!");let e=[],r={};return A(t).forEach(n=>{let o=typeof n=="object"&&n===null?rn:h(n)?nn:S(n)?n.toString():typeof n=="symbol"?n.toString()+" - "+an:n===1/0?on:n===-1/0?sn:typeof n=="bigint"?n.toString():g(n)?n.toJSONString():d(n)?JSON.stringify(n.toObject()):JSON.stringify(n);r[o]||e.push(n),r[o]=!0}),e}function Ve(t){if(f(t)){let e=Ve(t[0]);return[t.length].concat(e||[])}else return}function b(t){return g(t)||d(t)?b(t.values):(a(f(t),"The `shape` function only works on arrays, Series, and DataFrames!"),Ve(t))}function re(t,e,r){if(h(r)&&(r=0),a(r===0||r===1||r==="vertical"||r==="horizontal",'The only valid axis values for use when appending data to a DataFrame are 0, 1, "vertical", and "horizontal". Note that 0 == "horizontal" and 1 == "vertical".'),f(e)){a(!W(e),"The array of data you're trying to append to this DataFrame is jagged!");let n=b(e);if(n.length===1)if(r===0){let o=t.copy();o._values.push(e);let i=Math.max(t.shape[1],n[0]);for(o._values.forEach(s=>{for(;s.length<i;)s.push(void 0)});o._index.length<o._values.length;)o._index.push("row"+o._index.length);for(;o._columns.length<i;)o._columns.push("col"+o._columns.length);return o}else{let o=Math.max(t.shape[0],n[0]),i=t.copy();for(O(0,o).forEach(s=>{s>=i._values.length&&i._values.push(B(t.shape[1])),i._values[s].push(e[s])});i._index.length<i._values.length;)i._index.push("row"+i._index.length);for(;i._columns.length<i._values[0].length;)i._columns.push("col"+i._columns.length);return i}else if(n.length===2)if(r===0){let o=Math.max(...e.map(s=>s.length).concat([t.shape[1]])),i=t.copy();for(i._values=i._values.concat(e).map(s=>{for(;s.length<o;)s.push(void 0);return s});i._index.length<i._values.length;)i._index.push("row"+i._index.length);for(;i._columns.length<o;)i._columns.push("col"+i._columns.length);return i}else{let o=Math.max(...e.map(m=>m.length))+t.shape[1],i=Math.max(t.shape[0],n[0]),s=t.copy();for(O(0,i).forEach(m=>{for(m>=s._values.length&&s._values.push(B(t.shape[1])),s._values[m]=s._values[m].concat(e[m]);s._values[m].length<o;)s._values[m].push(void 0)});s._index.length<s._values.length;)s._index.push("row"+s._index.length);for(;s._columns.length<o;)s._columns.push("col"+s._columns.length);return s}else throw new R("Only 1- and 2-dimensional arrays can be appended to a DataFrame!")}else if(d(e)){let n=re(t,e.values,r);return r===0?n.index[n.index.length-1]=n.index.indexOf(e.name)>-1?e.name+" (2)":e.name:n.columns[n.columns.length-1]=n.columns.indexOf(e.name)>-1?e.name+" (2)":e.name,n}else if(g(e))if(r===0){let n=t.copy(),o=E(n._columns.concat(e._columns)).length;for(n._values.forEach(i=>{for(;i.length<o;)i.push(void 0)}),e.apply(i=>{let s=i.copy(),m=[];n._columns.forEach(u=>{let p=s._index.indexOf(u);p>-1?(m.push(s._values[p]),s._values.splice(p,1),s._index.splice(p,1)):m.push(void 0)}),n._values.push(m.concat(s._values))},1),n._columns=n._columns.concat(e._columns.filter(i=>n._columns.indexOf(i)<0));n._index.length<n._values.length;){let i="row"+n._index.length;n._index.push(i+(t._index.indexOf(i)>-1?" (2)":""))}return n}else{let n=t.copy();return n._index.forEach((o,i)=>{let s=e._index.indexOf(o);s>-1?n._values[i]=n._values[i].concat(e._values[s]):n._values[i]=n._values[i].concat(B(e.shape[1]))}),e._index.forEach((o,i)=>{n._index.indexOf(o)<0&&(n._index.push(o),n._values.push(B(n._columns.length).concat(e._values[i])))}),n._columns=n._columns.concat(e._columns.map(o=>o+(n._columns.indexOf(o)>-1?" (2)":""))),n}else throw new R("Only 1- or 2-dimensional arrays, Series, and DataFrames can be appended to a DataFrame!")}function Ge(t,e,r,n,o){if(o=o||0,a(S(n),"The first parameter to the `apply` method must be a function."),a(o===0||o===1,"The second parameter to the `apply` method (the `axis`) must be 0 or 1."),o===0){let i={},s;if(r.columns.forEach((m,u)=>{let p=new e(r.values.map(y=>y[u]));p.name=m,p.index=r.index;let c=n(p,u,r);c instanceof e?i[m]=c.values:i[m]=c,h(s)&&(s=c instanceof e||f(c))}),s){let m=new t(i);return m.index=r.index,m}else{let m=new e(r.columns.map(u=>i[u]));return m.index=r.columns,m}}else if(o===1){let i,s=r.values.map((m,u)=>{let p=new e(m);p.name=r.index[u],p.index=r.columns;let c=n(p,u,r);return h(i)&&(i=c instanceof e||f(c)),c instanceof e?c.values:c});if(i){let m=new t(s);return m.index=r.index,m.columns=r.columns,m}else{let m=new e(s);return m.index=r.index,m}}}function w(t){return typeof t=="string"}function We(t,e,r,n,o){let i=m=>m instanceof t,s=m=>m instanceof e;if(h(o)){if(i(n))return r.append(n,1);if(s(n))return r.append(n,1);if(P(n)){let m=Math.max(...Object.keys(n).concat(Object.getOwnPropertySymbols(n)).map(u=>n[u].length));return Object.keys(n).concat(Object.getOwnPropertySymbols(n)).forEach(u=>{for(;n[u].length<m;)n[u].push(void 0)}),r.append(new t(n),1)}else throw new R("You must pass a DataFrame, Series, or object into the `assign` method!")}else{a(w(n),"If passing two arguments into the `assign` method, then the first argument must be a string name!"),a(f(o)&&!W(o)&&b(o).length===1,"If passing two arguments into the `assign` method, then the second argument must be a 1-dimensional array!");let m=r.append(o,1);return m.columns[m.columns.length-1]=n,m}}function He(t,e){if(e.isEmpty)return new t;let r=new t(I(e.values));return r.columns=e.columns.slice(),r.index=e.index.slice(),r}function Xe(t,e,r,n,o){h(n)&&(n=[]),h(o)&&(o=[]),(w(n)||l(n))&&(n=[n]),(w(o)||l(o))&&(o=[o]),a(f(n),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),a(f(o),"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),a(b(n).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings."),a(b(o).length===1,"The `drop` method only works on 1-dimensional arrays of numerical indices and/or strings.");let i,s;r.index.forEach((u,p)=>{n.indexOf(u)<0&&n.indexOf(p)<0&&(i||(i=[]),i.push(u))}),r.columns.forEach((u,p)=>{o.indexOf(u)<0&&o.indexOf(p)<0&&(s||(s=[]),s.push(u))});let m=r.get(i,s);if(m instanceof e){let u=new t;u=u.assign(m),r.index.indexOf(m.name)>-1&&(u=u.transpose()),m=u}return m}function Kt(t){return l(t)&&(t>=0?Math.floor(t)===t:Math.ceil(t)===t)}function H(t){return Kt(t)&&t>=0}function Qe(t,e,r,n,o,i){n=n||0,a(n===0||n===1,"The first parameter of the `dropMissing` method (the `axis`) must be 0 or 1."),i=i||0,a(H(i),"The third parameter of the `dropMissing` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` null values)."),o=i>0?"none":o||"any",a(o==="any"||o==="all"||o==="none","The second parameter of the `dropMissing` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains null values, then it should be dropped; or that if 'all' of the data contains null values, then it should be dropped).");function s(p){if(i>0){let c=0;for(let y=0;y<p.length;y++){let N=p[y];if(h(N)&&c++,c>=i)return[]}}else if(o==="any")for(let c=0;c<p.length;c++){let y=p[c];if(h(y))return[]}else if(o==="all"){for(let c=0;c<p.length;c++){let y=p[c];if(!h(y))return p}return[]}return p}let m=r.copy(),u=Math.random().toString();if(n===0){m=m.assign(u,m.index);let p=m.values.map(s).filter(y=>y.length>0);if(b(p).length<2)return new t;m.values=p;let c=m.get(null,u);if(h(c))return new t;w(c)&&(c=[c]),c instanceof e&&(c=c.values),m.index=c,m=m.drop(null,u)}else if(n===1){let p={};if(m.columns.forEach((y,N)=>{let T=m.values.map(U=>U[N]),M=s(T);M.length>0&&(p[y]=M)}),Object.keys(p).length+Object.getOwnPropertySymbols(p).length===0)return new t;let c=new t(p);return c.index=m.index,c}return m}function gt(t){if(g(t)||d(t))return t.dropNaN(...Object.values(arguments).slice(1));a(f(t),"The `dropNaN` function only works on arrays, Series, and DataFrames!");let e=[];return t.forEach(r=>{try{return e.push(gt(r))}catch{if(l(r))return e.push(r)}}),e}function Ze(t,e,r,n,o){r=r||0,a(r===0||r===1,"The first parameter of the `dropNaN` method (the `axis`) must be 0 or 1."),o=o||0,a(H(o),"The third parameter of the `dropNaN` method (the `threshold`) should be a whole number (meaning that data should be dropped if it contains more than `threshold` NaN values)."),n=o>0?"none":n||"any",a(n==="any"||n==="all"||n==="none","The second parameter of the `dropNaN` method (the `condition` parameter, which indicates the condition under which data should be dropped) should be 'any' or 'all' (meaning that if 'any' of the data contains NaN values, then it should be dropped; or that if 'all' of the data contains NaN values, then it should be dropped).");function i(m){let u=gt(m);return o>0?m.length-u.length<o:n==="any"?u.length===m.length:n==="all"?u.length>0:!0}let s=e.copy();if(r===0){let m=s.index.filter(u=>{let p=s.get(u,null).values;return i(p)});return m.length>0?s.get(m,null):new t}else if(r===1){let m=s.columns.filter(u=>{let p=s.get(null,u).values;return i(p)});return m.length>0?s.get(null,m):new t}return s}function tr(t){let e={};return A(t).forEach((r,n)=>{e[r]=n}),e}function yt(t){return Object.keys(t).concat(Object.getOwnPropertySymbols(t)).sort((e,r)=>t[e]-t[r])}function er(t,e,r,n,o){a(S(n),"The `filter` method takes a single parameter: a function that is used to filter the values."),h(o)&&(o=0),a(o===0||o===1,"The `axis` parameter to the `filter` method must be 0 or 1.");let i=r.copy();if(i.isEmpty)return i;let s=tr(i.index),m=tr(i.columns);if(o===0){let u=0,p=i.values.filter((c,y)=>{let N=new e(c);N.name=r.index[y],N.index=r.columns;let T=n(N,y,r);return T?u++:delete s[i.index[y]],T});if(u===0)return new t;if(u===1){let c=new e(p[0]);return c.name=yt(s)[0],c.index=yt(m),c}i.values=p,i.index=yt(s)}else if(o===1){i=i.transpose();let u=0,p=i.values.filter((c,y)=>{let N=new e(c);N.name=r.columns[y],N.index=r.index;let T=n(N,y,r);return T?u++:delete m[i.index[y]],T});if(u===0)return new t;if(u===1){let c=new e(p[0]);return c.name=yt(m)[0],c.index=yt(s),c}i.values=p,i.index=yt(m),i=i.transpose()}return i}function rr(t,e,r){(w(e)||l(e))&&(e=[e]),(w(r)||l(r))&&(r=[r]);for(let o in e)typeof e[o]=="bigint"&&(e[o]=Number(e[o]));for(let o in r)typeof r[o]=="bigint"&&(r[o]=Number(r[o]));let n=E((e||[]).concat(r||[]).map(o=>typeof o));return a(n.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===1&&a(n[0]==="string"||n[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),n.length===2&&(a(n.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),a(n.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),h(e)||(e=e.map(o=>{if(w(o))return a(t.index.indexOf(o)>-1,`Row "${o}" does not exist!`),o;if(l(o))return a(o>=0,`Index ${o} is out of bounds!`),a(Math.floor(o)===o,"Row numbers must be integers!"),a(o<t.index.length,`Index ${o} is out of bounds!`),t.index[o]})),h(r)||(r=r.map(o=>{if(w(o))return a(t.columns.indexOf(o)>-1,`Column "${o}" does not exist!`),o;if(l(o))return a(o>=0,`Column ${o} is out of bounds!`),a(Math.floor(o)===o,"Column numbers must be integers!"),a(o<t.columns.length,`Column ${o} is out of bounds!`),t.columns[o]})),t.getSubsetByNames(e,r)}function mn(t,e){try{return t<e?-1:t>e?1:0}catch{return t=typeof t=="object"&&t!==null?JSON.stringify(t):t.toString(),e=typeof e=="object"&&e!==null?JSON.stringify(e):e.toString(),t<e?-1:t>e?1:0}}function L(t,e){if(h(e)&&(e=mn),g(t)||d(t))return t.sort(...Object.values(arguments).slice(1));a(f(t),"The `sort` function only works on arrays, Series, and DataFrames!"),a(S(e),"The second parameter of the `sort` function must be a comparison function!");let r=t.slice();return r.sort(e),r}function un(t){let e=t.toLowerCase(),r="";for(let o=0;o<e.length;o++){let i=e[o];i.match(/[a-z0-9]/g)?r+=i:r+=" "}let n=r.split(" ").filter(o=>o.length>0);return n[0]+n.slice(1).map(o=>o[0].toUpperCase()+o.substring(1)).join("")}function ne(t,e,r){h(r)?r=e.columns:w(r)&&(r=[r]);let n={};r.forEach(i=>{a(w(i),"You must pass either a string or a one-dimensional array of strings into the `getDummies` (AKA `oneHotEncode`) method!");let s=e.columns.indexOf(i);a(s>-1,`The given DataFrame does not have a column called "${i}"!`);let m=e.values.map(p=>p[s]),u=L(E(m));m.forEach(p=>{u.forEach(c=>{let y=i+"_"+un(c.toString());n[y]||(n[y]=[]),p===c?n[y].push(1):n[y].push(0)})})});let o=new t(n);return o.index=e.index,o}function nr(t,e,r){let n=t.shape;h(e)&&(e=O(0,n[0])),h(r)&&(r=O(0,n[1])),l(e)&&(e=[e]),l(r)&&(r=[r]),a(f(e)&&f(r),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),a(b(e).length===1&&b(r).length===1,"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),a(e.length>0,"The `rowIndices` array must contain at least one index."),a(r.length>0,"The `colIndices` array must contain at least one index."),e.forEach(s=>{a(H(s),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),a(s<t.index.length,`The row index ${s} is out of bounds.`)}),r.forEach(s=>{a(H(s),"The `rowIndices` and `colIndices` parameters must be 1-dimensional arrays of whole numbers."),a(s<t.columns.length,`The column index ${s} is out of bounds.`)});let o=e.map(s=>t.index[s]),i=r.map(s=>t.columns[s]);return t.getSubsetByNames(o,i)}function or(t,e,r,n,o){h(n)&&(n=r.index),h(o)&&(o=r.columns),w(n)&&(n=[n]),w(o)&&(o=[o]),a(f(n)&&f(o),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),a(b(n).length===1&&b(o).length===1,"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),a(n.length>0,"The `rows` array must contain at least one row name."),a(o.length>0,"The `cols` array must contain at least one column name."),n.forEach(m=>{a(w(m),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),a(r.index.indexOf(m)>-1,`The row name "${m}" does not exist in the list of rows.`)}),o.forEach(m=>{a(w(m),"The `rows` and `cols` parameters must be 1-dimensional arrays of strings."),a(r.columns.indexOf(m)>-1,`The column name "${m}" does not exist in the list of columns.`)});let i=n.map(m=>o.map(u=>r.values[r.index.indexOf(m)][r.columns.indexOf(u)]));if(n.length===1&&o.length===1)return i[0][0];if(n.length===1){let m=new e(i[0]);return m.name=n[0],m.index=o,m}if(o.length===1){let m=new e(i.map(u=>u[0]));return m.name=o[0],m.index=n,m}let s=new t(i);return s.columns=o,s.index=n,s}function ir(t,e,r){function n(N,T){return w(N)&&N.length>T?N.substring(0,T-3)+"...":N}if(r.isEmpty)return console.table({}),console.log("Shape:",[0,0],`
`),r;let o=typeof window>"u"?20:10,i=Math.floor(o/2),s=typeof process>"u"?10:Math.floor(process.stdout.columns/24)-1,m=Math.floor(s/2),u=o>r.index.length?null:O(0,i).concat(O(r.index.length-i,r.index.length)),p=s>r.columns.length?null:O(0,m).concat(O(r.columns.length-m,r.columns.length)),c=r.get(u,p);c instanceof e&&(r.shape[0]===1?(c=new t([c.values]),c.index=r.index,c.columns=new e(r.columns).get(p).values):r.shape[1]===1&&(c=new t([c.values]).transpose(),c.index=new e(r.index).get(u).values,c.columns=r.columns)),o<=r.index.length&&(c._index.splice(i,0,"..."),c._values.splice(i,0,O(0,c.columns.length).map(()=>"..."))),s<=r.columns.length&&(c._columns.splice(m,0,"..."),c._values=c._values.map(N=>(N.splice(m,0,"..."),N)));let y=28;return c instanceof e?(c.values=c.values.map(N=>n(N,y)),c.name=n(c.name,y),c.index=c.index.map(N=>n(N,y))):(c.values=c.values.map(N=>N.map(T=>n(T,y))),c.columns=c.columns.map(N=>n(N,y)),c.index=c.index.map(N=>n(N,y))),console.table(c.toDetailedObject()),console.log("Shape:",r.shape,`
`),r}function tt(t,e){a(l(t),"The `leftPad` function only works on numbers!");let r=t.toString();for(;r.length<e;)r="0"+r;return r}function sr(t,e){let r=e?t:t.copy();return r.index=O(0,t.shape[0]).map(n=>"row"+tt(n,(r.index.length-1).toString().length)),r}function Z(t,e){if(g(t)||d(t))return Z(t.values,e);a(f(t),"The `product` function only works on arrays, Series, and DataFrames!");try{if(t.length===0)return NaN;let r=A(t),n=!1,o=1;for(let i of r){if(!l(i))if(e)i=1;else return NaN;typeof i=="bigint"&&(n=!0,i=Number(i)),o*=i}if(n)try{return BigInt(o)}catch{}return o}catch{return NaN}}function ar(t){return Kt(t)&&t>0}function et(t,e){if(g(t)||d(t))return et(t.values,e);if(a(f(t),"The first argument passed into the `reshape` function must be an array!"),l(e)&&(e=[e]),a(f(e),"The second argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),a(b(e).length===1,"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),e=e.map(i=>(typeof i=="bigint"&&(i=Number(i)),a(ar(i),"The first argument passed into the `reshape` function must be a whole number or a one-dimensional array of whole numbers!"),Number(i))),e.length===0)return A(t);let r=A(t);if(e.length===1&&e[0]===r.length)return r;a(Z(e)===r.length,"The new shape doesn't match the number of values available in `x` (the first argument passed into the `reshape` function)!");let n=[],o=Math.floor(r.length/e[0]);for(let i=0;i<e[0];i++){let s=r.slice(i*o,(i+1)*o);n.push(et(s,e.slice(1)))}return n}var fr=Math.pow(2,64),x=[];qt(Math.floor(Math.random()*fr));function fn(t,e){t=z(t);function r(){t+=z("0x9e3779b97f4a7c15");let o=I(t);return o=(o^o>>BigInt(30))*z("0xbf58476d1ce4e5b9"),o=(o^o>>BigInt(27))*z("0x94d049bb133111eb"),o^o>>BigInt(31)}let n=[];for(let o=0;o<e;o++)n.push(r());return n}function z(t){return BigInt.asUintN(64,BigInt(t))}function mr(t,e){return t=z(t),e=BigInt(e),z(z(t<<e)|z(t>>z(BigInt(64)-e)))}function qt(t){if(typeof t=="bigint"&&(t=Number(t)),h(t))return I(x);{a(l(t),"If passing a value into the `seed` function, then that value must be an integer!");let e=fn(Math.floor(t),4);x[0]=e[0],x[1]=e[1],x[2]=e[2],x[3]=e[3]}}function ur(){let t=z(mr(x[0]+x[3],23)+x[0]),e=z(x[1]<<BigInt(17));return x[2]=z(x[2]^x[0]),x[3]=z(x[3]^x[1]),x[1]=z(x[1]^x[2]),x[0]=z(x[0]^x[3]),x[2]=z(x[2]^e),x[3]=mr(x[3],45),Math.floor(Number(t))/fr}function K(t){return h(t)?ur():(f(t)||(t=[t]),et(B(Z(t)).map(ur),t))}function st(t){if(g(t)||d(t))return t.shuffle(...Object.values(arguments).slice(1));a(f(t),"The `shuffle` function only works on arrays, Series, and DataFrames!");let e=[],r=t.slice();for(let n=0;n<t.length;n++){let o=Math.floor(K()*r.length);e.push(r.splice(o,1)[0])}return e}function lr(t,e){return h(e)&&(e=0),a(e===0||e===1,"The `axis` parameter to the `shuffle` must be 0, 1, or undefined."),t.get(e===0?st(t.index):null,e===1?st(t.columns):null)}function X(t){return typeof t=="boolean"}function pr(t,e,r){return S(e)?ln(t,e,r):pn(t,e,r)}function ln(t,e,r){if(r=h(r)?0:r,a(S(e),"When sorting a DataFrame using a function, the first argument to the `sort` method must be a function!"),a(l(r),"When sorting a DataFrame using a function, the second argument to the `sort` method must be null, undefined, 0, or 1 to indicate the axis along which the data should be sorted! An axis of 0 means that the rows will be sorted relative to each other, whereas an axis of 1 means that the columns will be sorted relative to each other."),r===0){let n=L(t.index,(o,i)=>e(t.get(o,null),t.get(i,null)));return t.get(n,null)}else{let n=L(t.columns,(o,i)=>e(t.get(null,o),t.get(null,i)));return t.get(null,n)}}function pn(t,e,r){let n=t.copy(),o=K().toString();n=n.assign(o,n.index),h(e)&&(e=[o],r=[!0]),(l(e)||w(e))&&(e=[e],(X(r)||w(r))&&(r=[r])),a(f(e),"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),a(b(e).length===1,"The first parameter of the `sort` method must be (1) a string or index representing a column name or index, respectively; (2) a 1-dimensional array of strings and/or indices; or (3) null."),h(r)&&(r=O(0,e.length).map(()=>!0)),a(f(r),"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),a(b(r).length===1,"The second parameter of the `sort` method must be (1) a string or boolean representing the sort direction ('ascending' / 'descending', or true / false); (2) a 1-dimensional array of strings and/or booleans; or (3) null."),a(e.length===r.length,"The arrays passed into the `sort` method must be equal in length."),e=e.map(s=>{if(a(w(s)||l(s),"Column references can either be column names (as strings) or column indices (as whole numbers)."),w(s)){let m=n.columns.indexOf(s);return a(m>-1,`The column "${s}" does not exist!`),m}if(l(s))return a(H(s),"Column indices must be whole numbers!"),a(s<n.columns.length,`The index ${s} is out of bounds!`),s}),r=r.map(s=>{if(a(w(s)||X(s),"Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),w(s)){let m=s.trim().toLowerCase();return a(m==="ascending"||m==="descending","Direction references can either be strings ('ascending' or 'descending') or booleans (true or false)."),m==="ascending"}if(X(s))return s}),n.values=L(n.values,(s,m)=>{let u=0;for(;s[e[u]]===m[e[u]]&&u<e.length;)u++;let p=r[u];if(s[e[u]]===m[e[u]])return 0;if(s[e[u]]<m[e[u]])return p?-1:1;if(s[e[u]]>m[e[u]])return p?1:-1});let i=n.columns.indexOf(o);return n.index=n.values.map(s=>s[i]),n=n.dropColumns(o),n}function cr(t,e){h(e)?e=0:a(e===0||e===1,"The axis parameter of the `toDetailedObject` method must be undefined, 0, or 1. An axis of 0 indicates that the returned object should be organized first by rows and then by columns. An axis of 1 indicates that the returned object should be organized first by columns and then by rows.");let r={};return e===0?t.index.forEach((n,o)=>{let i={};t.columns.forEach((s,m)=>{i[s]=t.values[o][m]}),r[n]=i}):t.columns.forEach((n,o)=>{let i={};t.index.forEach((s,m)=>{i[s]=t.values[m][o]}),r[n]=i}),r}function Vt(t,e){return JSON.stringify(t.toObject(e))}async function hr(t,e,r){let n=Vt(t,r),o=!1,i=!1,s,m;try{let u=e;if(e.includes("/")){let c=e.split("/");u=c[c.length-1]}let p=document.createElement("a");p.href=`data:application/json;charset=utf-8,${encodeURIComponent(n)}`,p.download=u,p.dispatchEvent(new MouseEvent("click")),o=!0}catch(u){s=u}try{let u=await import("node:fs"),p=await import("node:path");u.writeFileSync(p.resolve(e),n,"utf8"),i=!0}catch(u){m=u}if(!o&&!i)throw typeof window<"u"?new R(s):typeof module<"u"?new R(m):new R("I don't know what's going wrong, but it doesn't seem like you're in Node or the browser, and we couldn't download and/or write the file to disk!");return t}function dr(t){let e={};return t.columns.forEach(r=>{e[r]=t.get(r).values}),e}function C(t){if(g(t)||d(t))return t.transpose();a(f(t),"The `transpose` function only works on arrays, Series, and DataFrames!");let e=b(t);if(a(e.length<=2,"I'm not smart enough to know how to transpose arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `transpose` function!"),e.length===1)return Y(t);if(e.length===2){let r=B(Y(e));for(let n=0;n<e[0];n++)for(let o=0;o<e[1];o++)r[o][n]=t[n][o];return r}}function oe(t,e,r){if(d(r))return new t(e.values.concat(r.values));if(f(r)){let n=b(r);a(n.length===1&&!it(n),"Only vectors can be appended to Series!");let o=e.copy();return r.forEach((i,s)=>{o._values.push(i),o._index.push("item"+(e.values.length+s))}),o}return oe(e,[r])}function gr(t,e){a(S(e),"The parameter to the `apply` method must be a function.");let r=t.copy();return r._values=r._values.map((n,o)=>e(n,o)),r}function yr(t){let e=t.copy(),r=[];return e._values=e.values.filter((n,o)=>h(n)?!1:(r.push(e.index[o]),!0)),e._index=r,e}function br(t,e){let r=[],n=[];e.values.forEach((i,s)=>{l(i)&&(n.push(i),r.push(e.index[s]))});let o=new t(n);return o.name=e.name,o.index=r,o}function Nr(t,e,r){let n=e.copy(),o=I(n.index),i=[],s=n.values.filter((m,u)=>{let p=r(m,u,n.values);return p||i.push(n.index[u]),p});return i.forEach(m=>{o.splice(o.indexOf(m),1)}),s.length===0?(n=new t,n.name=e.name,n):(n.values=s,n.index=o,n)}function vr(t,e){(w(e)||l(e))&&(e=[e]);for(let n in e)typeof e[n]=="bigint"&&(e[n]=Number(e[n]));let r=E((e||[]).map(n=>typeof n));return a(r.length<=2,"Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===1&&a(r[0]==="string"||r[0]==="number","Only whole numbers and/or strings are allowed in `get` arrays!"),r.length===2&&(a(r.indexOf("string")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!"),a(r.indexOf("number")>-1,"Only whole numbers and/or strings are allowed in `get` arrays!")),h(e)||(e=e.map(n=>{if(typeof n=="string")return a(t.index.indexOf(n)>-1,`Index "${n}" does not exist!`),n;if(typeof n=="number")return a(n>=0,`Index ${n} is out of bounds!`),a(Math.floor(n)===n,"Indices must be integers!"),a(n<t.index.length,`Index ${n} is out of bounds!`),t.index[n]})),t.getSubsetByNames(e)}function wr(t,e){let r=t.shape;h(e)&&(e=O(0,r[0])),a(f(e),"The `indices` array must be 1-dimensional array of whole numbers."),a(b(e).length===1,"The `indices` array must be a 1-dimensional array of whole numbers."),a(e.length>0,"The `indices` array must contain at least one index."),e.forEach(o=>{a(H(o),"The `indices` array must be a 1-dimensional array of whole numbers."),a(o<t.index.length,`The row index ${o} is out of bounds.`)});let n=e.map(o=>t.index[o]);return t.getSubsetByNames(n)}function Sr(t,e,r){h(r)&&(r=e.index),a(f(r),"The `indices` array must be a 1-dimensional array of strings."),a(b(r).length===1,"The `indices` array must be a 1-dimensional array of strings."),a(r.length>0,"The `indices` array must contain at least one index name."),r.forEach(i=>{a(w(i),"The `indices` array must contain only strings."),a(e.index.indexOf(i)>-1,`The name "${i}" does not exist in the index.`)});let n=r.map(i=>e.values[e.index.indexOf(i)]);if(n.length===1)return n[0];let o=new t(n);return o.index=r,o.name=e.name,o}function Or(t){let e=t.copy(),r=typeof window>"u"?20:10;if(e.index.length>r){e=e.get(O(0,r/2).concat(O(e.index.length-r/2,e.index.length)));let o=I(e.index);o.splice(Math.floor(o.length/2),0,"..."),e.values.push("..."),e.index.push("..."),e=e.get(o)}let n={};return e.values.forEach((o,i)=>{let s={};s[e.name]=o,n[e.index[i]]=s}),console.table(n),console.log("Shape:",t.shape,`
`),t}function Tr(t){let e=t.copy();return e.get(st(e.index))}function _r(t,e,r){r=r||((u,p)=>u<p?-1:1),a(h(r)||S(r),"You must pass undefined, null, or a comparison function as the second argument to the `sort` method!");let n=C([e.values,e.index]),o=L(n,(u,p)=>r(u[0],p[0])),i=[],s=[];o.forEach(u=>{i.push(u[0]),s.push(u[1])});let m=new t;return m._values=i,m._index=s,m.name=e.name,m}function Dr(t,e){let r=C([e.values,e.index]);r=C(L(r,(o,i)=>{if(o[1]===i[1])return 0;if(o[1]<i[1])return-1;if(o[1]>i[1])return 1}));let n=new t(r[0]);return n.index=r[1],n.name=e.name,n}function Ir(t){let e={};return e[t.name]={},t.index.forEach((r,n)=>{e[t.name][r]=t.values[n]}),e}var xr=Symbol.for("@jrc03c/js-math-tools/series");function Ar(t){class e{static[Symbol.hasInstance](n){try{return!!n._symbol&&n._symbol===xr}catch{return!1}}constructor(n){if(this.name="data",Object.defineProperty(this,"_symbol",{configurable:!1,enumerable:!1,writable:!1,value:xr}),Object.defineProperty(this,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(this,"values",{configurable:!0,enumerable:!0,get(){return this._values},set(o){a(f(o),"The new values must be a 1-dimensional array!");let i=b(o);a(i.length===1,"The new array of values must be 1-dimensional!"),i[0]<this._index.length?this._index=this._index.slice(0,i[0]):i[0]>this._index.length&&(this._index=this._index.concat(O(this._index.length,i[0]).map(s=>"item"+tt(s,(o.length-1).toString().length)))),this._values=o}}),Object.defineProperty(this,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(this,"index",{configurable:!0,enumerable:!0,get(){return this._index},set(o){a(f(o),"The new index must be a 1-dimensional array of strings!"),a(o.length===this.shape[0],"The new index must be the same length as the old index!"),a(b(o).length===1,"The new index must be a 1-dimensional array of strings!"),o.forEach(i=>{a(w(i),"All of the row names must be strings!")}),this._index=o}}),n){if(n instanceof e)this.name=n.name,this.values=I(n.values),this.index=I(n.index);else if(f(n)){let o=b(n);a(o.length===1,"When passing an array into the constructor of a Series, the array must be 1-dimensional!"),this.values=n}else if(n instanceof Object){let o=Object.keys(n).concat(Object.getOwnPropertySymbols(n)).map(m=>m.toString());a(o.length===1,"When passing an object into the constructor of a Series, the object must have only 1 key-value pair, where the key is the name of the data and the value is the 1-dimensional array of values!");let i=o[0],s=n[i];a(b(s).length===1,"When passing an object into the constructor of a Series, the object must have only 1 key-value pair, where the key is the name of the data and the value is the 1-dimensional array of values!"),this.name=i,this.values=s.slice()}}}get shape(){return b(this.values)}get length(){return this.shape[0]}get isEmpty(){return this.values.filter(n=>!h(n)).length===0}clear(){let n=this.copy();return n.values.forEach((o,i)=>{n.values[i]=void 0}),n}get(n){return vr(this,n)}getSubsetByNames(n){return Sr(e,this,n)}getSubsetByIndices(n){return wr(this,n)}loc(n){return this.getSubsetByNames(n)}iloc(n){return this.getSubsetByIndices(n)}reverse(){let n=new e(Y(this.values));return n.index=Y(this.index),n.name=this.name,n}resetIndex(){let n=this.copy();return n.index=O(0,this.shape[0]).map(o=>"item"+tt(o,(n.index.length-1).toString().length)),n}copy(){let n=new e;return n._values=I(this.values),n._index=I(this.index),n.name=this.name,n}append(n){return oe(e,this,n)}apply(n){return gr(this,n)}concat(n){return this.append(n)}dropMissing(n,o){return yr(this,n,o)}dropNaN(){return br(e,this)}toObject(){return Ir(this)}print(){return Or(this)}shuffle(){return Tr(this)}sort(n){return _r(e,this,n)}sortByIndex(){return Dr(e,this)}filter(n){return Nr(e,this,n)}toDataFrame(){let n=new t(C([this.values]));return n.columns=[this.name],n.index=this.index,n}transpose(){let n=this.copy();return n.values=Y(n.values),n.index=Y(n.index),n}getDummies(){return this.toDataFrame().getDummies()}oneHotEncode(){return this.getDummies()}}return e}var Er=Symbol.for("@jrc03c/js-math-tools/dataframe");function Gt(t){let e="abcdefghijklmnopqrstuvwxyz1234567890",r="";for(let n=0;n<t;n++)r+=e[Math.floor(K()*e.length)];return r}var _=class{static[Symbol.hasInstance](e){try{return!!e._symbol&&e._symbol===Er}catch{return!1}}constructor(e){if(Object.defineProperty(this,"_symbol",{configurable:!1,enumerable:!1,writable:!1,value:Er}),Object.defineProperty(this,"_values",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(this,"values",{configurable:!0,enumerable:!0,get(){return this._values.length===0||!h(this._values[0])&&this._values[0].length===0?[[]]:this._values},set(r){a(f(r),"The new values must be a 2-dimensional array!");let n=b(r);a(n.length===2,"The new array of values must be 2-dimensional!"),n[0]<this._index.length?this._index=this._index.slice(0,n[0]):n[0]>this._index.length&&(this._index=this._index.concat(O(this._index.length,n[0]).map(o=>"row"+tt(o,(n[0]-1).toString().length)))),n[1]<this._columns.length?this._columns=this._columns.slice(0,n[1]):n[1]>this._columns.length&&(this._columns=this._columns.concat(O(this._columns.length,n[1]).map(o=>"col"+tt(o,(n[1]-1).toString().length)))),this._values=r}}),Object.defineProperty(this,"_columns",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(this,"columns",{configurable:!0,enumerable:!0,get(){return this._columns},set(r){a(f(r),"The new columns list must be a 1-dimensional array of strings!"),a(this.isEmpty||r.length===this.shape[1],"The new columns list must be the same length as the old columns list!"),a(b(r).length===1,"The new columns list must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Gt(8):o.trim()));let n=(()=>{let o=ot(r),i={};return o.values.forEach(s=>{i[s]=o.get(s)}),i})();r=r.map(o=>n[o]>1?o+"_"+Gt(8):o),this._columns=r}}),Object.defineProperty(this,"_index",{value:[],configurable:!0,enumerable:!1,writable:!0}),Object.defineProperty(this,"index",{configurable:!0,enumerable:!0,get(){return this._index},set(r){a(f(r),"The new index must be a 1-dimensional array of strings!"),a(this.isEmpty||r.length===this.shape[0],"The new index must be the same length as the old index!"),a(b(r).length===1,"The new index must be a 1-dimensional array of strings!"),r=r.map(o=>(typeof o!="string"&&(o=JSON.stringify(o)||o.toString()),o.trim().length===0?"untitled_"+Gt(8):o.trim()));let n=(()=>{let o=ot(r),i={};return o.values.forEach(s=>{i[s]=o.get(s)}),i})();r=r.map(o=>n[o]>1?o+"_"+Gt(8):o),this._index=r}}),a(h(e)||P(e)||f(e),"The `data` passed into the constructor of a DataFrame must be either (1) an object where the key-value pairs are (respectively) column names and 1-dimensional arrays of values, or (2) a 2-dimensional array of values."),e)if(e instanceof _)this.values=I(e.values),this.columns=I(e.columns),this.index=I(e.index);else if(f(e)){let r=b(e);a(r.length===2,"The `data` array passed into the constructor of a DataFrame must be 2-dimensional!"),a(!W(e),"The 2-dimensional array passed into the constructor of a DataFrame must not contain sub-arrays (i.e., rows) of different lengths!"),this.values=e}else{this._columns=Object.keys(e).concat(Object.getOwnPropertySymbols(e)).map(s=>s.toString());let r=[],n=null,o=null;this._columns.forEach(s=>{h(o)&&(n=s,o=e[s].length),a(e[s].length===o,`The object passed into the DataFrame constructor contains arrays of different lengths! The key "${n}" points to an array containing ${o} items, and the key "${s}" points to an array containing ${e[s].length} items.`),o=e[s].length;let m=e[s];r.push(m)}),this._values=C(r);let i=b(this.values);this._index=O(0,i[0]).map(s=>"row"+tt(s,(i[0]-1).toString().length))}}get shape(){return b(this.values)}get length(){return this.shape[0]}get width(){return this.shape[1]}get rows(){return this.index}set rows(e){this.index=e}get isEmpty(){return this.values.length===0||this.values.every(e=>e.length===0)}clear(){let e=new _(B(this.shape));return e.columns=this.columns.slice(),e.index=this.index.slice(),e}get(e,r){if(arguments.length===0)return this;if(arguments.length===1)try{return this.get(null,e)}catch{return this.get(e,null)}return rr(this,e,r)}getSubsetByNames(e,r){return or(_,F,this,e,r)}getSubsetByIndices(e,r){return nr(this,e,r)}getDummies(e){return ne(_,this,e)}oneHotEncode(e){return ne(_,this,e)}transpose(){let e=new _(C(this.values));return e.columns=this.index.slice(),e.index=this.columns.slice(),e}get T(){return this.transpose()}resetIndex(e){return sr(this,e)}copy(){return He(_,this)}assign(e,r){return We(_,F,this,e,r)}apply(e,r){return Ge(_,F,this,e,r)}dropMissing(e,r,n){return Qe(_,F,this,e,r,n)}dropNaN(e,r,n){return Ze(_,this,e,r,n)}drop(e,r){return Xe(_,F,this,e,r)}dropColumns(e){return this.drop(null,e)}dropRows(e){return this.drop(e,null)}toDetailedObject(e){return cr(this,e)}toObject(){return dr(this)}toJSONString(e){return Vt(this,e)}saveAsJSON(e,r){return hr(this,e,r)}print(){return ir(_,F,this)}sort(e,r){return pr(this,e,r)}sortByIndex(){return this.sort()}filter(e,r){return er(_,F,this,e,r)}shuffle(e){return lr(this,e)}append(e,r){return re(this,e,r)}concat(e,r){return this.append(e,r)}join(e,r){return this.append(e,r)}toString(){return JSON.stringify(this)}},F=Ar(_);function rt(t,e){return D(t,{shouldDropNaNs:e}).max}function v(t){return a(S(t),"You must pass a function into the `vectorize` function!"),function e(){let r,n,o=[],i=[],s=Object.keys(arguments).filter(m=>{let u=arguments[m];return f(u)?!0:d(u)?(r=!0,o.push(u),!0):g(u)?(n=!0,i.push(u),!0):!1}).map(m=>arguments[m]);if(s.slice(0,-1).forEach((m,u)=>{a(j(f(m)?b(m):m.shape,f(s[u+1])?b(s[u+1]):s[u+1].shape),`When passing multiple arrays into the \`${t.name}\` function, all of the arrays must have the same shape!`)}),s.length>0){let m=rt(s.map(p=>p.length?p.length:p.values.length)),u=O(0,m).map(p=>{let c=Object.keys(arguments).map(y=>f(arguments[y])?arguments[y][p]:d(arguments[y])||g(arguments[y])?arguments[y].values[p]:arguments[y]);return e(...c)});if(n)try{if(i.length===1&&j(b(i[0]),b(u))){let p=new _(u);return p.index=i[0].index.slice(),p.columns=i[0].columns.slice(),p}else return new _(u)}catch{return u}if(r)try{if(o.length===1&&o[0].length===u.length){let p=new F(u);return p.name=o[0].name,p.index=o[0].index.slice(),p}else return new F(u)}catch{return u}return u}else return t(...arguments)}}function cn(t){try{return l(t)?typeof t=="bigint"?t<0?-t:t:Math.abs(t):NaN}catch{return NaN}}var ft=v(cn);function hn(){try{let t=0,e=!1,r=Object.values(arguments);for(let n of r){if(!l(n))return NaN;typeof n=="bigint"&&(e=!0,n=Number(n)),t+=n}if(e)try{return BigInt(t)}catch{}return t}catch{return NaN}}var at=v(hn);function dn(t,e){try{return e(t)}catch{return NaN}}var nt=v(dn);function gn(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.acos(t)):NaN}catch{return NaN}}var ie=v(gn);function yn(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.asin(t)):NaN}catch{return NaN}}var se=v(yn);function bn(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.atan(t)):NaN}catch{return NaN}}var ae=v(bn);function xt(t,e){if(g(t)){let r=xt(t.values,e);return[t.index[r[0]],t.columns[r[1]]]}if(d(t)){let r=xt(t.values,e);return t.index[r]}a(f(t),"The `argmax` function only works on arrays, Series, and DataFrames!");try{let r=G(t,rt(t,e));return r?r.length===0?void 0:r.length===1?r[0]:r:void 0}catch{return}}function At(t,e){return D(t,{shouldDropNaNs:e}).min}function Et(t,e){if(g(t)){let r=Et(t.values,e);return[t.index[r[0]],t.columns[r[1]]]}if(d(t)){let r=Et(t.values,e);return t.index[r]}a(f(t),"The `argmin` function only works on arrays, Series, and DataFrames!");try{let r=G(t,At(t,e));return r?r.length===0?void 0:r.length===1?r[0]:r:void 0}catch{return}}function J(t,e){if(g(t)||d(t))return t.apply(r=>J(r,e));if(f(t))return t.map(r=>J(r,e));if(e==="null")return null;if(e==="number"){if(h(t))return NaN;let r=J(t,"boolean");if(X(r))return r?1:0;try{JSON.parse(t)}catch{let i=J(t,"date");if($(i))return i.getTime()}let n=parseFloat(t);return isNaN(n)?NaN:n}if(e==="int"){let r=J(t,"number");return r>=0?Math.floor(r):Math.ceil(r)}if(e==="float")return J(t,"number");if(e==="bigint")return typeof t=="bigint"?t:BigInt(J(t,"int"));if(e==="boolean"){if(X(t))return t;if(l(t))return t===0?!1:t===1?!0:null;try{let r=(typeof t=="object"?t.toString()==="null"?"false":JSON.stringify(t):t.toString()).trim().toLowerCase();return r==="true"||r==="yes"||r==="y"?!0:r==="false"||r==="no"||r==="n"?!1:null}catch{return null}}if(e==="date"){if($(t))return t;if(h(t))return null;let r=parseFloat(t);if(!isNaN(r)){let o=new Date(t);return $(o)?o:null}let n=Date.parse(t);return isNaN(n)?null:new Date(n)}if(e==="object"){if(P(t))return t;let r=J(t,"boolean");if(X(r))return null;try{let o=J(t,"number");if(l(o))return JSON.parse(t),null}catch{}let n=J(t,"date");if(n)return n;try{let o=JSON.parse(t);return f(o)?o.map(i=>J(i,e)):o}catch{return null}}if(e==="string")return h(t)?j(t,void 0)?"undefined":"null":t instanceof Date?t.toJSON():(()=>typeof t=="object"?t===null?"null":JSON.stringify(t):t.toString())()}function Nn(t){try{return l(t)?typeof t=="bigint"?t:Math.ceil(t):NaN}catch{return NaN}}var me=v(Nn);function vn(t,e){try{if(!l(t))return NaN;if(typeof t=="bigint")return t;if(h(e))e=1e-10;else if(!l(e))return NaN;return ft(t)<e?0:t}catch{return NaN}}var ue=v(vn);function fe(t){if(g(t)||d(t)){let e=t.copy();return e.values=fe(e.values),e}if(f(t))return t.map(e=>fe(e));try{let e=JSON.parse(t);return l(e)?typeof e=="bigint"?Number(e):e>=0?Math.floor(e):Math.ceil(e):NaN}catch{return NaN}}var k=v(fe);function Fr(t,e,r){try{return l(t)?l(e)?l(r)?typeof t=="bigint"?BigInt(Fr(k(t),e,r)):t<e?e:t>r?r:t:NaN:NaN:NaN}catch{return NaN}}var le=v(Fr);function bt(t,e){function*r(n,o){if(o>n.length)yield n;else if(o<=0)yield[];else if(n.length<2)yield n;else for(let i=0;i<n.length;i++){let s=n[i],m=n.slice(i+1);if(!(m.length<o-1)&&o-1>=0)for(let u of bt(m,o-1))yield[s].concat(u)}}return g(t)||d(t)?bt(t.values,e):(a(f(t),"The `combinations` function only works on arrays, Series, and DataFrames!"),a(l(e)&&k(e)===e&&e>=0,"`r` must be a non-negative integer!"),r(A(t),e))}function Ft(t,e){let r=[];for(let n of bt(t,e))r.push(n.slice());return r}function Mt(){let t=Object.values(arguments).map(r=>g(r)||d(r)?E(r.values):(a(f(r),"The `intersect` function only works on arrays, Series, and DataFrames!"),E(r)));return E(t).filter(r=>t.every(n=>n.findIndex(o=>j(o,r))>-1))}var Nt=class{constructor(e){a(h(e)||e===Nt.DROP_NAN_MODE||e===Nt.DROP_MISSING_MODE,"The `mode` value passed into the `IndexMatcher` constructor must be undefined or one of [IndexMatcher.DROP_NAN_MODE, IndexMatcher.DROP_MISSING_MODE]! (By default, the mode is `Indexer.DROP_MISSING_MODE`.)"),this.mode=h(e)?Nt.DROP_NAN_MODE:e,this.index=null}fit(){let e=[];return Object.values(arguments).forEach(r=>{if(f(r)){let n=b(r);if(n.length===1)r=new F(r);else if(n.length===2)r=new _(r);else throw new Error("The `IndexMatcher.fit` method only works on arrays, Series, and DataFrames!")}a(g(r)||d(r),"The `IndexMatcher.fit` method only works on arrays, Series, and DataFrames!"),this.mode===Nt.DROP_MISSING_MODE?e.push(r.dropMissing().index):e.push(r.dropNaN().index)}),this.index=Mt(...e),this}transform(){a(!!this.index,"The IndexMatcher hasn't been fitted yet! Please call the `fit` method before calling the `transform` method.");let e=Object.values(arguments).map(r=>{if(f(r)){let n=b(r);if(n.length===1)return new F(r).get(this.index).values;if(n.length===2)return new _(r).get(this.index,null).values;throw new Error("The `IndexMatcher.fit` method only works on arrays, Series, and DataFrames!")}return a(g(r)||d(r),"The `IndexMatcher.fit` method only works on arrays, Series, and DataFrames!"),r.get(this.index,null)});return e.length===1?e[0]:e}fitAndTransform(){return this.fit(...arguments).transform(...arguments)}},mt=Nt;Qt(mt,"DROP_NAN_MODE","DROP_NAN_MODE"),Qt(mt,"DROP_MISSING_MODE","DROP_MISSING_MODE");function ut(t,e,r,n){if(d(t))return ut(t.values,e,r,n);if(d(e))return ut(t,e.values,r,n);if(a(f(t)&&f(e)&&b(t).length===1&&b(e).length===1,"The `covariance` function only works on 1-dimensional arrays and Series!"),a(t.length===e.length,"The two arrays or Series passed into the `covariance` function must have the same length!"),r)return ut(...new mt().fitAndTransform(t,e),!1,n);try{let o=D(t,{stdev:n}),i=D(e,{stdev:n}),s=Number(o.mean),m=Number(i.mean);if(!l(s)||!l(m))return NaN;let u=Math.max(t.length,e.length),p=0;for(let c=0;c<u;c++){let y=t[c],N=e[c];if(!l(y))return NaN;if(!l(N))return NaN;typeof y=="bigint"&&(y=Number(y)),typeof N=="bigint"&&(N=Number(N)),p+=(y-s)*(N-m)}return n?[p/t.length,o,i]:p/t.length}catch{return NaN}}function jt(t,e,r){if(d(t))return jt(t.values,e,r);if(d(e))return jt(t,e.values,r);a(f(t)&&f(e)&&b(t).length===1&&b(e).length===1,"The `correl` function only works on 1-dimensional arrays and Series!"),a(t.length===e.length,"The two arrays or Series passed into the `correl` function must have the same length!");try{let[o,i,s]=ut(t,e,r,!0),m=i.stdev*s.stdev;return o/m}catch{return NaN}}function wn(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.cos(t)):NaN}catch{return NaN}}var pe=v(wn);var ce=Object.freeze({boolean:"boolean",date:"date",null:"null",number:"number",object:"object",string:"string"});function Bt(t,e){if(g(t)||d(t))return Bt(t.values,e);if(g(e)||d(e))return Bt(t,e.values);a(f(t)&&f(e),"The `diff` function only works on arrays, Series, and DataFrames!");let r=E(t),n=E(e),o=[];return r.forEach(i=>{n.findIndex(s=>j(s,i))<0&&o.push(i)}),o}function Mr(t,e){try{if(!l(t))return NaN;if(!l(e))return NaN;if(typeof t=="bigint"||typeof e=="bigint"){let r=Mr(Number(t),Number(e));try{return BigInt(r)}catch{return r}}return Math.pow(t,e)}catch{return NaN}}var lt=v(Mr);function jr(t){try{if(!l(t))return NaN;if(typeof t=="bigint"){let e=jr(Number(t));try{return BigInt(e)}catch{return e}}return Math.sqrt(t)}catch{return NaN}}var Ut=v(jr);function Sn(){try{let t=Object.values(arguments);if(t.length===0)return NaN;let e=!1,r=1;for(let n of t){if(!l(n))return NaN;typeof n=="bigint"&&(e=!0,n=Number(n)),r*=n}if(e)try{return BigInt(r)}catch{}return r}catch{return NaN}}var Pt=v(Sn);function q(){return Pt(...arguments)}function kt(t,e){return at(t,q(e,-1))}function pt(t,e){return D(t,{shouldDropNaNs:e}).sum}function zt(t,e){if(l(t)&&l(e))return ft(t-e);if(g(t)||d(t))return zt(t.values,e);if(g(e)||d(e))return zt(t,e.values);f(t)&&f(e)&&a(j(b(t),b(e)),"If passing two arrays, Series, or DataFrames into the `distance` function, then those objects must have the same shape!");try{return Ut(pt(lt(kt(t,e),2)))}catch{return NaN}}function he(t,e){return q(t,lt(e,-1))}function V(t,e){if(g(t)){let o=V(t.values,e);if(b(o).length===1){let i=new F(o);return i.name=d(e)?e.name:i.name,i.index=t.index.slice(),i}else{let i=new _(o);return i.index=t.index.slice(),g(e)&&(i.columns=e.columns.slice()),i}}if(g(e)){let o=V(t,e.values);if(b(o).length===1){let i=new F(o);return i.name=d(t)?t.name:i.name,i.index=e.columns.slice(),i}else{let i=new _(o);return i.columns=e.columns.slice(),i}}if(d(t))return V(t.values,e);if(d(e))return V(t,e.values);a(f(t)&&f(e),"The `dot` function only works on arrays, Series, and DataFrames!");let r=b(t),n=b(e);if(a(r.length<=2&&n.length<=2,"I'm not smart enough to know how to get the dot-product of arrays that have more than 2 dimensions. Sorry for the inconvenience! Please only pass 1- or 2-dimensional arrays into the `dot` function!"),a(r[r.length-1]===n[0],`There's a dimension misalignment in the two arrays you passed into the \`dot\` function. (${r[r.length-1]} !== ${n[0]})`),r.length===1&&n.length===1)return pt(q(t,e));if(r.length===1&&n.length===2)return C(e).map(o=>V(t,o));if(r.length===2&&n.length===1)return t.map(o=>V(o,e));if(r.length===2&&n.length===2){let o=C(e),i=[];for(let s=0;s<t.length;s++){let m=[];for(let u=0;u<o.length;u++)m.push(V(t[s],o[u]));i.push(m)}return i}}function vt(t){if(g(t)||d(t))return t.dropMissing(...Object.values(arguments).slice(1));a(f(t),"The `dropMissing` function only works on arrays, Series, and DataFrames!");let e=[];return t.forEach(r=>{try{return e.push(vt(r))}catch{h(r)||e.push(r)}}),e}function wt(t,e){if(g(t)||d(t))return wt(t.values,e);if(g(e)||d(e))return wt(t,e.values);a(f(t)&&f(e),"The `dropMissingPairwise` function only works on arrays, Series, and DataFrames!"),a(j(b(t),b(e)),"The two arrays, Series, and/or DataFrames passed into the `dropMissingPairwise` function must have the same shape!");let r=[],n=[];for(let o=0;o<t.length;o++)try{let[i,s]=wt(t[o],e[o]);r.push(i),n.push(s)}catch{!h(t[o])&&!h(e[o])&&(r.push(t[o]),n.push(e[o]))}return[r,n]}function St(t,e){if(g(t)||d(t))return St(t.values,e);if(g(e)||d(e))return St(t,e.values);a(f(t)&&f(e),"The `dropNaNPairwise` only works on arrays, Series, and DataFrames!"),a(j(b(t),b(e)),"The two arrays, Series, and/or DataFrames passed into the `dropNaNPairwise` must have the same shape!");let r=[],n=[];for(let o=0;o<t.length;o++)try{let[i,s]=St(t[o],e[o]);r.push(i),n.push(s)}catch{l(t[o])&&l(e[o])&&(r.push(t[o]),n.push(e[o]))}return[r,n]}function de(t){return vt(t)}function ct(t,e){if(g(t)||d(t))return ct(t.values,e);a(f(t),"The first argument passed into the `every` function must be an array, Series, or DataFrame!"),a(S(e),"The second argument passed into the `every` function must be a function!");for(let r of t)if(f(r)){if(!ct(r,e))return!1}else if(!e(r))return!1;return!0}function On(t){try{if(!l(t))return NaN;if(typeof t=="bigint"){if(t===0n)return 1n;t=Number(t)}return Math.exp(t)}catch{return NaN}}var ge=v(On);function ye(t){try{return typeof t=="bigint"?BigInt(ye(k(t))):t!==k(t)?NaN:t<=1?1:t*ye(t-1)}catch{return NaN}}var be=v(ye);function Ct(t,e){if(g(t)||d(t))return Ct(t.values,e);if(a(P(t)||f(t),"You must pass (1) an object, array, Series, or DataFrame and (2) a function or value into the `find` function!"),!S(e)){let o=e;e=i=>i===o}function r(o,i,s){if(s=s||[],s.indexOf(o)>-1)return null;if(P(o)){s.push(o);let m=Object.keys(o).concat(Object.getOwnPropertySymbols(o));for(let u=0;u<m.length;u++){let p=m[u],c=o[p];if(i(c))return c;let y=r(c,i,s);if(y)return y}}else if(f(o)){s.push(o);for(let m=0;m<o.length;m++){let u=o[m];if(i(u))return u;let p=r(u,i,s);if(p)return p}}else if(i(o))return o;return null}function n(o){try{return e(o)}catch{return!1}}return r(t,n)}function Jt(t,e){if(g(t)||d(t))return Jt(t.values,e);if(a(P(t)||f(t),"You must pass (1) an object, array, Series, or DataFrame and (2) a function or value into the `findAll` function!"),!S(e)){let i=e;e=s=>s===i}function r(i,s,m){if(m=m||[],m.indexOf(i)>-1)return null;if(P(i)){m.push(i);let u=Object.keys(i).concat(Object.getOwnPropertySymbols(i)),p=[];for(let c=0;c<u.length;c++){let y=u[c],N=i[y],T=!1;s(N)&&(p.push(N),T=!0);let M=r(N,s,m);M&&M.length>0&&M.slice(T?1:0).forEach(U=>p.push(U))}return p}else if(f(i)){m.push(i);let u=[];for(let p=0;p<i.length;p++){let c=i[p],y=!1;s(c)&&(u.push(c),y=!0);let N=r(c,s,m);N&&N.length>0&&N.slice(y?1:0).forEach(T=>u.push(T))}return u}else if(s(i))return[i];return null}function n(i){try{return e(i)}catch{return!1}}let o=r(t,n);return o&&o.length>0?o:null}function Tn(t){try{if(t==="Infinity")return 1/0;if(t==="-Infinity")return-1/0;let e=JSON.parse(t);return l(e)?e:NaN}catch{return NaN}}var Ne=v(Tn);function _n(t){try{return l(t)?typeof t=="bigint"?t:Math.floor(t):NaN}catch{return NaN}}var ve=v(_n);function ht(t){l(t)&&(t=[t]);let e=[],r=Z(t);for(let n=0;n<r;n++)e.push(0);return et(e,t)}function we(t){typeof t=="bigint"&&(t=k(t)),a(!h(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),a(l(t),"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),a(k(t)===t,"You must pass an integer greater than 0 (representing the size) into the `identity` function!"),a(t>0,"You must pass an integer greater than 0 (representing the size) into the `identity` function!");let e=ht([t,t]);for(let r=0;r<t;r++)e[r][r]=1;return e}var Br=["true","false","yes","no"];var Ur=["null","none","nan","na","n/a","","undefined"];function Wt(t){return t.type==="number"&&(typeof t.value<"u"?t.isInteger=k(t.value)===t.value:t.isInteger=ct(t.values,e=>l(e)?k(e)===e:!0)),t}function Ot(t){if(g(t)){let i=t.copy(),s=Ot(t.values);return i.values=s.values,Wt({type:s.type,values:i})}if(d(t)){let i=t.copy(),s=Ot(t.values);return i.values=s.values,Wt({type:s.type,values:i})}if(!f(t)){let i=Ot([t]);return i.value=i.values[0],delete i.values,Wt(i)}a(f(t),"The `inferType` function only works on arrays, Series, and DataFrames!");let e=A(t).map(i=>{if(i===void 0)return"null";try{if(typeof i=="object"){let u=new Date(i.getTime());if($(u))return"date"}}catch{}w(i)||(typeof i=="bigint"?i=i.toString()+"n":i=JSON.stringify(i));let m=i.toLowerCase().trim();if(Ur.indexOf(m)>-1)return"null";if(Br.indexOf(m)>-1)return"boolean";try{if(i.match(/^-?\d+n$/g))return"bigint";let u=JSON.parse(i);return l(u)?"number":typeof u=="object"?f(u)?"string":"object":"string"}catch{let p=new Date(i);return $(p)?"date":"string"}}),r=ot(e),o=r.values.toSorted((i,s)=>r.get(s)-r.get(i))[0];return Wt({type:o,values:nt(t,i=>J(i,o))})}function Tt(t){if(g(t)){let r=t.copy();return r.values=Tt(r.values),r}a(f(t),"The `inverse` function only works on square 2-dimensional arrays or DataFrames!");let e=b(t);if(a(e.length===2,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),a(e[0]===e[1],"The array passed into the `inverse` function must be exactly two-dimensional and square!"),a(e[0]>=0,"The array passed into the `inverse` function must be exactly two-dimensional and square!"),e[0]===0)return t;if(e[0]===1){a(t[0][0]!==0,"This matrix cannot be inverted!");let r=t[0][0];return typeof r=="bigint"&&(r=Number(r)),1/r}else if(e[0]===2){let r=t[0][0],n=t[0][1],o=t[1][0],i=t[1][1];typeof r=="bigint"&&(r=Number(r)),typeof n=="bigint"&&(n=Number(n)),typeof o=="bigint"&&(o=Number(o)),typeof i=="bigint"&&(i=Number(i));let s=r*i-n*o;a(s!==0,"This matrix cannot be inverted!");let m=[[i,-n],[-o,r]];return q(m,1/s)}else if(e[0]>1){let r=(n,o)=>l(n)||l(o)?q(n,o):V(n,o);for(let n=1;n<e[0]-1;n++)try{let o=t.slice(0,n).map(U=>U.slice(0,n)),i=t.slice(0,n).map(U=>U.slice(n,e[0])),s=t.slice(n,e[0]).map(U=>U.slice(0,n)),m=t.slice(n,e[0]).map(U=>U.slice(n,e[0])),u=Tt(o),p=Tt(at(m,r(-1,r(r(s,u),i)))),c=at(u,r(r(r(r(u,i),p),s),u)),y=r(-1,r(r(u,i),p)),N=r(-1,r(r(p,s),u)),T=p;return c.map((U,Xt)=>U.concat(y[Xt])).concat(N.map((U,Xt)=>U.concat(T[Xt])))}catch{}a(!1,"This matrix cannot be inverted!")}}var Se=new Function(`
    try {
      return this === window
    } catch(e) {}

    try {
      return !!importScripts
    } catch(e){}

    return false
  `);function Pr(t,e,r){try{if(!l(t))return NaN;if(!l(e))return NaN;if(!l(r))return NaN;if(typeof t=="bigint"||typeof e=="bigint"){let n=Pr(Number(t),Number(e),r);try{return BigInt(n)}catch{return n}}return r*(e-t)+t}catch{return NaN}}var Oe=v(Pr);function kr(t,e){try{if(e=h(e)?Math.E:e,!l(t))return NaN;if(!l(e))return NaN;if(typeof t=="bigint"||typeof e=="bigint"){let r=kr(Number(t),Number(e));try{return BigInt(r)}catch{return r}}return Math.log(t)/Math.log(e)}catch{return NaN}}var Te=v(kr);function _e(t,e){return D(t,{shouldDropNaNs:e}).mean}function De(t,e){return D(t,{shouldDropNaNs:e,median:!0}).median}function zr(t,e){try{if(!l(t))return NaN;if(!l(e))return NaN;if(typeof t=="bigint"||typeof e=="bigint"){let r=zr(Number(t),Number(e));try{return BigInt(r)}catch{return r}}return t%e}catch{return NaN}}var Ie=v(zr);function xe(t,e){return D(t,{shouldDropNaNs:e,mode:!0}).mode}function Cr(){let t=K(),e=K();return Math.sqrt(-2*Math.log(t))*Math.cos(2*Math.PI*e)}function Ae(t){return h(t)?Cr():nt(B(t),Cr)}function Ee(t){return nt(B(t),()=>1)}function Rt(t,e){function*r(n,o){if(o=o||n.length,n.length===1){yield[n];return}for(let i of Ft(n,o)){if(!i.slice)continue;let s=ht(i.length);yield i;let m=1;for(;m<i.length;)if(s[m]<m){if(m%2===0){let u=i[0];i[0]=i[m],i[m]=u}else{let u=i[s[m]];i[s[m]]=i[m],i[m]=u}yield i,s[m]+=1,m=1}else s[m]=0,m+=1}}return g(t)||d(t)?Rt(t.values,e):(a(f(t),"The `permutations` function only works on arrays, Series, and DataFrames!"),h(e)&&(e=t.length),a(l(e)&&k(e)===e&&e>=0,"`r` must be a non-negative integer!"),r(A(t),e))}function Fe(t,e){let r=[];for(let n of Rt(t,e))r.push(n.slice());return r}function Me(){Object.keys(arguments).forEach(t=>{let e=arguments[t];if(f(e))if(W(e))console.log(e);else{let r=b(e);r.length===1?new F(e).print():r.length==2?new _(e).print():console.log(e)}else g(e)||d(e)?e.print():console.log(e)})}var Dn=v((t,e,r,n,o)=>{try{let i=!1;for(let p of[t,e,r,n,o]){if(!l(p))return NaN;typeof p=="bigint"&&(i=!0)}i&&(t=Number(t),e=Number(e),r=Number(r),n=Number(n),o=Number(o));let s=(o-n)*(t-e),m=r-e;if(m===0)return NaN;let u=s/m+n;if(i)try{return BigInt(u)}catch{}return u}catch{return NaN}});function je(t,e,r,n,o){if(f(t)&&h(n)&&h(o)){n=e,o=r;let i=D(t);e=i.min,r=i.max}return Dn(t,e,r,n,o)}function In(t){try{return l(t)?typeof t=="bigint"?t:Math.round(t):NaN}catch{return NaN}}var Be=v(In);function Jr(t){try{return l(t)?typeof t=="bigint"?BigInt(Jr(Number(t))):t<0?-1:t>0?1:0:NaN}catch{return NaN}}var Ue=v(Jr);function xn(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.sin(t)):NaN}catch{return NaN}}var Pe=v(xn);function Yt(t,e){if(g(t)||d(t))return Yt(t.values,e);a(f(t),"The first argument passed into the `some` function must be an array, Series, or DataFrame!"),a(S(e),"The second argument passed into the `some` function must be a function!");for(let r of t)if(f(r)){if(Yt(r,e))return!0}else if(e(r))return!0;return!1}function $t(t,e){return D(t,{shouldDropNaNs:e,stdev:!0}).stdev}function ke(t){return $t(t)}function An(t){try{return l(t)?(typeof t=="bigint"&&(t=Number(t)),Math.tan(t)):NaN}catch{return NaN}}var ze=v(An);function Ht(t,e){a(S(t),"`fn` must be a function!");let r=new Date;return e?t(...e):t(),new Date-r}async function Ce(t,e){a(S(t),"`fn` must be a function!");let r=new Date;return e?await t(...e):await t(),new Date-r}function Je(){return E([...arguments].map(t=>f(t)?t:g(t)||d(t)?t.values:[t]))}function Re(t,e){return D(t,{shouldDropNaNs:e,variance:!0}).variance}function Ye(){let t=[],e=Object.values(arguments).map(r=>((g(r)||d(r))&&(r=r.values),a(f(r),"The `zip` function only works on arrays, Series, and DataFrames!"),r));return O(0,rt(e.map(r=>r.length))).forEach(r=>{let n=[];e.forEach(o=>{let i=o[r];n.push(h(i)?void 0:i)}),t.push(n)}),t}var Lt={abs:ft,add:at,apply:nt,arccos:ie,arcsin:se,arctan:ae,argmax:xt,argmin:Et,assert:a,cast:J,ceil:me,chop:ue,clamp:le,combinations:Ft,combinationsIterator:bt,copy:I,correl:jt,cos:pe,count:ot,covariance:ut,DataFrame:_,dataTypes:ce,decycle:Q,diff:Bt,distance:zt,divide:he,dot:V,dropMissing:vt,dropMissingPairwise:wt,dropNaN:gt,dropNaNPairwise:St,dropUndefined:de,every:ct,exp:ge,factorial:be,find:Ct,findAll:Jt,flatten:A,float:Ne,floor:ve,identity:we,IndexMatcher:mt,indexOf:G,inferType:Ot,int:k,intersect:Mt,inverse:Tt,isArray:f,isBoolean:X,isBrowser:Se,isDataFrame:g,isDate:$,isEqual:j,isFunction:S,isJagged:W,isNested:it,isNumber:l,isObject:P,isSeries:d,isString:w,isUndefined:h,lerp:Oe,log:Te,MathError:R,max:rt,mean:_e,median:De,min:At,mod:Ie,mode:xe,multiply:Pt,ndarray:B,normal:Ae,ones:Ee,permutations:Fe,permutationsIterator:Rt,pow:lt,print:Me,product:Z,random:K,range:O,remap:je,reshape:et,reverse:Y,round:Be,scale:q,seed:qt,Series:F,set:E,shape:b,shuffle:st,sign:Ue,sin:Pe,some:Yt,sort:L,sqrt:Ut,stats:D,std:$t,stdev:ke,subtract:kt,sum:pt,tan:ze,timeAsync:Ce,timeSync:Ht,time:Ht,transpose:C,union:Je,variance:Re,vectorize:v,zeros:ht,zip:Ye,dump(){let t=typeof globalThis<"u"?globalThis:typeof global<"u"?global:typeof window<"u"?window:typeof self<"u"?self:void 0;if(!t)throw new Lt.MathError("Cannot dump functions into global scope because none of `globalThis`, `global`, `window`, or `self` exist in the current context!");Object.keys(Lt).forEach(e=>{try{Object.defineProperty(t,e,{configurable:!1,enumerable:!0,writable:!1,value:Lt[e]})}catch{t[e]=Lt[e]}})}};typeof window<"u"&&(window.JSMathTools=Lt);module.exports=Gr(En);0&&(module.exports={DataFrame,IndexMatcher,MathError,Series,abs,add,apply,arccos,arcsin,arctan,argmax,argmin,assert,cast,ceil,chop,clamp,combinations,combinationsIterator,copy,correl,cos,count,covariance,dataTypes,decycle,diff,distance,divide,dot,dropMissing,dropMissingPairwise,dropNaN,dropNaNPairwise,dropUndefined,every,exp,factorial,find,findAll,flatten,float,floor,identity,indexOf,inferType,int,intersect,inverse,isArray,isBoolean,isBrowser,isDataFrame,isDate,isEqual,isFunction,isJagged,isNested,isNumber,isObject,isSeries,isString,isUndefined,lerp,log,max,mean,median,min,mod,mode,multiply,ndarray,normal,ones,permutations,permutationsIterator,pow,print,product,random,range,remap,reshape,reverse,round,scale,seed,set,shape,shuffle,sign,sin,some,sort,sqrt,stats,std,stdev,subtract,sum,tan,time,timeAsync,timeSync,transpose,union,variance,vectorize,zeros,zip});
