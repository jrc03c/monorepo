var f=class extends Promise{constructor(c){let n=[],s,l,e=!1,t=!1,r=!1,u=a=>{n.push(a)},o=function(){e||t||r||(e=!0,n.forEach(a=>a(...arguments)))};super((a,b)=>{l=function(){e||t||r||(r=!0,a(...arguments))},s=function(){e||t||r||(t=!0,b(...arguments))};try{return c(l,s,o,u)}catch(i){return s(i)}}),Object.defineProperty(this,"abort",{configurable:!1,enumerable:!0,writable:!1,value:o}),Object.defineProperty(this,"onAbort",{configurable:!1,enumerable:!0,writable:!1,value:u}),Object.defineProperty(this,"wasAborted",{configurable:!1,enumerable:!0,get:()=>e,set:()=>{}}),Object.defineProperty(this,"wasRejected",{configurable:!1,enumerable:!0,get:()=>t,set:()=>{}}),Object.defineProperty(this,"wasResolved",{configurable:!1,enumerable:!0,get:()=>r,set:()=>{}})}};export{f as AbortablePromise};
