var b=class extends Promise{wasAborted=!1;wasRejected=!1;wasResolved=!1;constructor(c){let l,n=[],a,o,e=!1,r=!1,s=!1,u=t=>{e?t(...l||{}):n.push(t)},f=function(){e||r||s||(l=arguments,e=!0,n.forEach(t=>t(...arguments)))};super((t,i)=>{o=function(){e||r||s||(s=!0,t(...arguments))},a=function(){e||r||s||(r=!0,i(...arguments))};try{return c(o,a,f,u)}catch(d){return a(d)}}),Object.defineProperty(this,"abort",{configurable:!1,enumerable:!0,writable:!1,value:f}),Object.defineProperty(this,"onAbort",{configurable:!1,enumerable:!0,writable:!1,value:u}),Object.defineProperty(this,"wasAborted",{configurable:!1,enumerable:!0,get:()=>e,set:()=>{}}),Object.defineProperty(this,"wasRejected",{configurable:!1,enumerable:!0,get:()=>r,set:()=>{}}),Object.defineProperty(this,"wasResolved",{configurable:!1,enumerable:!0,get:()=>s,set:()=>{}})}abort(){}onAbort(){}};export{b as AbortablePromise};
