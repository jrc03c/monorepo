var f=class extends Promise{constructor(c){let n=[],s,l,a=!1,e=!1,t=!1,u=r=>{n.push(r)},o=function(){a||e||t||n.forEach(r=>r(...arguments))};super((r,b)=>{l=function(){a||e||t||(t=!0,r(...arguments))},s=function(){a||e||t||(e=!0,b(...arguments))};try{return c(l,s,o,u)}catch(i){return s(i)}}),Object.defineProperty(this,"abort",{configurable:!1,enumerable:!0,writable:!1,value:o}),Object.defineProperty(this,"onAbort",{configurable:!1,enumerable:!0,writable:!1,value:u}),Object.defineProperty(this,"wasAborted",{configurable:!1,enumerable:!0,get:()=>a,set:()=>{}}),Object.defineProperty(this,"wasRejected",{configurable:!1,enumerable:!0,get:()=>e,set:()=>{}}),Object.defineProperty(this,"wasResolved",{configurable:!1,enumerable:!0,get:()=>t,set:()=>{}})}};export{f as AbortablePromise};
