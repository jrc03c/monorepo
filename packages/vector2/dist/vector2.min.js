(()=>{var r=class n{x=0;y=0;constructor(t,s){let e=this;e.x=t,e.y=s}add(t){let s=this;return s.x+=t.x,s.y+=t.y,s}subtract(t){let s=this;return s.x-=t.x,s.y-=t.y,s}dot(t){let s=this;return s.x*t.x+s.y*t.y}get magnitude(){let t=this;return Math.sqrt(Math.pow(t.x,2)+Math.pow(t.y,2))}set magnitude(t){this.normalize().scale(t)}get angle(){let t=this;if(t.x===0){if(t.y===0)return NaN;if(t.y>0)return Math.PI/2;if(t.y<0)return 3*Math.PI/2}let s=Math.atan(t.y/t.x)+(t.x<0?Math.PI:0),e=Math.floor(s/(2*Math.PI));return s-e*2*Math.PI}set angle(t){let s=this,e=s.magnitude;s.x=e*Math.cos(t),s.y=e*Math.sin(t)}scale(t){let s=this;return s.x*=t,s.y*=t,s}normalize(){let t=this;return t.scale(1/t.magnitude)}rotate(t){let s=this;return s.angle+=t,s}copy(){let t=this;return new n(t.x,t.y)}clone(){return this.copy()}static add(t,s){return t.copy().add(s)}static subtract(t,s){return t.copy().subtract(s)}static dot(t,s){return t.copy().dot(s)}static scale(t,s){return t.copy().scale(s)}static normalize(t){return t.copy().normalize()}static rotate(t,s){return t.copy().rotate(s)}static copy(t){return t.copy()}static clone(t){return t.copy()}};typeof globalThis<"u"&&(globalThis.Vector2=r);})();
